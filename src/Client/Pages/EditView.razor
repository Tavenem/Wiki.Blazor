@inherits OfflineSupportComponent

<div class="wiki-edit-terms-notice">
    @if (!string.IsNullOrEmpty(WikiOptions.PolicyPageTitle))
    {
        if (!string.IsNullOrEmpty(WikiOptions.CopyrightPageTitle))
        {
            <div class="wiki-edit-terms-notice">
                <p>Content submitted to this wiki is subject to each of its <a href="@WikiState.Link(WikiOptions.PolicyPageTitle, WikiOptions.SystemNamespace)">policies</a>, including but not limited to its <a href="@WikiState.Link(WikiOptions.CopyrightPageTitle, WikiOptions.SystemNamespace)">copyright policy</a>.</p>
            </div>
        }
        else
        {
            <div class="wiki-edit-terms-notice">
                <p>Content submitted to this wiki is subject to each of its <a href="@WikiState.Link(WikiOptions.PolicyPageTitle, WikiOptions.SystemNamespace)">policies</a>.</p>
            </div>
        }
    }
    else if (!string.IsNullOrEmpty(WikiOptions.CopyrightPageTitle))
    {
        <div class="wiki-edit-terms-notice">
            <p>Content submitted to this wiki is subject to its <a href="@WikiState.Link(WikiOptions.CopyrightPageTitle, WikiOptions.SystemNamespace)">copyright policy</a>.</p>
        </div>
    }
    else
    {
        <div class="wiki-edit-terms-notice">
            <p>Content submitted to this wiki is subject to each of its policies, including but not limited to its copyright policy.</p>
        </div>
    }
</div>
<TextInput Label="Title"
           @bind-Value="Title"
           @bind-Value:after="OnTitleChanged"
           Required="true"
           DisplayHelpTextOnFocus="true"
           HelpText="Move this article by changing its title" />
@if (RedirectEnabled)
{
    <Tooltip TooltipText="You are renaming this article, which changes its URL. Leaving a redirect behind ensures that people who visit the original URL will be redirected to the new page.">
        <Checkbox @bind-Value="Redirect" Label="Leave a redirect behind" />
    </Tooltip>
}
<Tabs TTabItem="object" ActivePanelIndexChanged="OnTabChangedAsync" Class="align-self-stretch">
    <TabPanel Title="Editor">
        <Editor Height="20rem"
                Syntax="IsScript ? EditorSyntax.JavaScript : EditorSyntax.Markdown"
                Spellcheck="true"
                @bind-Value="Content" />
    </TabPanel>
    <TabPanel Title="Preview">
        <SyntaxHighlighter Style="height:50rem;overflow:auto;padding-top:1rem;width:100%">
            @PreviewContent
        </SyntaxHighlighter>
    </TabPanel>
</Tabs>
<TextInput Label="Revision comment"
           @bind-Value="Comment"
           Spellcheck="true"
           DisplayHelpTextOnFocus="true"
           HelpText="Briefly describe your changes"
           Class="align-self-stretch" />
<div class="d-flex flex-wrap gap-3 align-self-stretch justify-content-space-between">
    <Checkbox Label="Make me the owner" @bind-Value="OwnerSelf" Style="flex-basis:20rem" />
    <UserSelector Label="Owner (optional)"
                  @bind-SelectedUsers="Owner"
                  AllowGroups="true"
                  Disabled="OwnerSelf"
                  DisplayHelpTextOnFocus="true"
                  HelpText="May be a user or a group. Can be left blank to make the article community-owned."
                  Class="flex-grow-1" />
</div>
<div class="d-flex flex-wrap gap-3 align-self-stretch justify-content-space-between">
    <Checkbox Label="Make me the only editor" @bind-Value="EditorSelf" Disabled="NoOwner" Style="flex-basis:20rem" />
    <UserSelector Label="Allowed editors (optional)"
                  @bind-SelectedUsers="Editors"
                  AllowGroups="true"
                  Disabled="EditorSelf || NoOwner"
                  Multiple="true"
                  DisplayHelpTextOnFocus="true"
                  HelpText="May be users or groups. The owner is automatically included."
                  Class="flex-grow-1" />
</div>
<div class="d-flex flex-wrap gap-3 align-self-stretch justify-content-space-between">
    <Checkbox Label="Make me the only viewer" @bind-Value="ViewerSelf" Disabled="NoOwner" Style="flex-basis:20rem" />
    <UserSelector Label="Allowed viewers (optional)"
                  @bind-SelectedUsers="Viewers"
                  AllowGroups="true"
                  Disabled="ViewerSelf || NoOwner"
                  Multiple="true"
                  DisplayHelpTextOnFocus="true"
                  HelpText="May be users or groups. The owner is automatically included."
                  Class="flex-grow-1" />
</div>
<div class="wiki-edit-terms-notice">
    @if (!string.IsNullOrEmpty(WikiOptions.PolicyPageTitle))
    {
        if (!string.IsNullOrEmpty(WikiOptions.CopyrightPageTitle))
        {
            <div class="wiki-edit-terms-notice">
                <p>Content submitted to this wiki is subject to each of its <a href="@WikiState.Link(WikiOptions.PolicyPageTitle, WikiOptions.SystemNamespace)">policies</a>, including but not limited to its <a href="@WikiState.Link(WikiOptions.CopyrightPageTitle, WikiOptions.SystemNamespace)">copyright policy</a>.</p>
            </div>
        }
        else
        {
            <div class="wiki-edit-terms-notice">
                <p>Content submitted to this wiki is subject to each of its <a href="@WikiState.Link(WikiOptions.PolicyPageTitle, WikiOptions.SystemNamespace)">policies</a>.</p>
            </div>
        }
    }
    else if (!string.IsNullOrEmpty(WikiOptions.CopyrightPageTitle))
    {
        <div class="wiki-edit-terms-notice">
            <p>Content submitted to this wiki is subject to its <a href="@WikiState.Link(WikiOptions.CopyrightPageTitle, WikiOptions.SystemNamespace)">copyright policy</a>.</p>
        </div>
    }
    else
    {
        <div class="wiki-edit-terms-notice">
            <p>Content submitted to this wiki is subject to each of its policies, including but not limited to its copyright policy.</p>
        </div>
    }
</div>
<div class="d-flex flex-wrap m-3 gap-3">
    <button class="btn primary" disabled="@SubmitDisabled" @onclick="ReviseAsync">Publish</button>
    <a class="btn" href="@(Page is null ? WikiState.Link() : WikiState.LinkHere())">Cancel</a>
    @if (Page is not null)
    {
        <button class="btn danger" @onclick="DeleteAsync">Delete</button>
    }
</div>
@if (AllowDrafts)
{
    <div class="d-flex flex-wrap m-3 gap-3">
        <button class="btn primary" disabled="@SubmitDisabled" @onclick="SaveDraftAsync">Save Draft</button>
        @if (HasDraft)
        {
            <button class="btn" @onclick="LoadDraftAsync">Load Saved Draft</button>
            <button class="btn warning" disabled="@SubmitDisabled" @onclick="DeleteDraftAsync">Delete Saved Draft</button>
        }
    </div>
}
@if (Page?.Transclusions is not null && Page.Transclusions.Count > 0)
{
    <Collapse Title="Pages transcluded in the current version of this one:">
        <ul class="wiki-edit-transclusionlist">
            @foreach (var transclusion in Page.Transclusions)
            {
                <li><a class="wiki-link wiki-link-exists" href="@WikiState.Link(transclusion)">@transclusion.ToString()</a></li>
            }
        </ul>
    </Collapse>
}