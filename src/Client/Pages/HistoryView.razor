@inherits OfflineSupportComponent

@if (Revisions is null || Revisions.Count == 0)
{
    <p class="wiki-history-nocontent">No revisions match the current filter.</p>
}
else
{
    @if (IsInteractive)
    {
        <Collapse Title="Filter">
            <DateTimeInput Label="Start date" ShowTime="true" @bind-Value="@CurrentStart" />
            <DateTimeInput Label="End date" ShowTime="true" @bind-Value="@CurrentEnd" />
            <UserSelector @ref="UserSelector" Label="User" @bind-SelectedUsers="SelectedEditor" InitialUsers="@Editor" />
            <button class="btn primary" @onclick="OnFilterAsync">Apply filter</button>
        </Collapse>
    }
    else if (CurrentStart.HasValue
        || CurrentEnd.HasValue
        || !string.IsNullOrEmpty(Editor))
    {
        <Collapse Title="Filter">
            @if (CurrentStart.HasValue)
            {
                <p>Start date: <span>@CurrentStart?.ToString("f")</span></p>
            }
            @if (CurrentEnd.HasValue)
            {
                <p>End date: <span>@CurrentEnd?.ToString("f")</span></p>
            }
            @if (!string.IsNullOrEmpty(Editor))
            {
                <UserSelector @ref="UserSelector" Label="User" @bind-SelectedUsers="SelectedEditor" InitialUsers="@Editor" />
            }
        </Collapse>
    }
    <p class="wiki-history-instructions">Click on the date/time to view a revision.</p>
    if (IsInteractive
        && !string.Equals(WikiState.WikiNamespace, WikiOptions.FileNamespace, StringComparison.OrdinalIgnoreCase))
    {
        <button class="btn primary outlined my-3" @onclick="OnCompare">Compare selected versions</button>
    }
    <ul>
        @for (int i = 0; i < Revisions.Count; i++)
        {
            <li class="wiki-history-revision">
                @if (!string.Equals(WikiState.WikiNamespace, WikiOptions.FileNamespace, StringComparison.OrdinalIgnoreCase))
                {
                    <span class="wiki-history-list-diffs">
                        @if (Revisions.HasPreviousPage || i > 0)
                        {
                            <a href="@GetCompareWithCur(Revisions[i])" title="Compare with the current version">cur</a>
                        }
                        else
                        {
                            <span class="text-disabled">cur</span>
                        }
                        @if (i < Revisions.Count - 1 || Revisions.HasNextPage)
                        {
                            <a href="@GetCompareWithPrev(Revisions[i])" title="Compare with the previous version">prev</a>
                        }
                        else
                        {
                            <span class="text-disabled">prev</span>
                        }
                    </span>
                    @if (IsInteractive)
                    {
                        <Checkbox TValue="bool"
                                  Value="@(FirstRevision == Revisions[i].Revision.TimestampTicks || SecondRevision == Revisions[i].Revision.TimestampTicks)"
                                  ValueChanged="@(v => OnSelectRevision(Revisions[i], v))" />
                    }
                }
                <a href="@WikiState.LinkHere(query: $"rev={Revisions[i].Revision.TimestampTicks}")"
                   class="wiki-history-list-timestamp"
                   title="@WikiState.PageTitle">@Revisions[i].Revision.GetTimestamp(TimezoneOffset)</a>
                <a href="@WikiState.Link(Revisions[i].Revision.Editor, WikiOptions.UserNamespace)"
                   class="wiki-username wiki-username-link wiki-history-list-editor"
                   title="@($"Visit the user page for {Revisions[i].EditorName}")">@(Revisions[i].EditorName)</a>
                <span>@Revisions[i].Revision.Comment</span>
            </li>
        }
    </ul>
    if (IsInteractive
        && !string.Equals(WikiState.WikiNamespace, WikiOptions.FileNamespace, StringComparison.OrdinalIgnoreCase))
    {
        <button class="btn primary outlined my-3" @onclick="OnCompare">Compare selected versions</button>
    }
    @if (Revisions.TotalPages > 1)
    {
        <div class="d-flex flex-wrap align-items-baseline gap-3 mt-3">
            <Pagination Id="pg"
                        @bind-CurrentPage="CurrentPageNumber"
                        @bind-CurrentPage:after="OnPageNumberChangedAsync"
                        NextRequested="OnNextRequestedAsync"
                        PageCount="(ulong?)Revisions?.TotalPages"
                        PersistState="true" />
            @if (IsInteractive)
            {
                <Select Label="Number of revisions per page:"
                        @bind-Value="CurrentPageSize"
                        @bind-Value:after="OnPageSizeChangedAsync"
                        Class="dense">
                    <Option Label="50" Value="50" />
                    <Option Label="100" Value="100" />
                    <Option Label="200" Value="200" />
                </Select>
            }
            else
            {
                <span>Number of revisions per page: <span>@CurrentPageSize</span></span>
            }
        </div>
    }
}